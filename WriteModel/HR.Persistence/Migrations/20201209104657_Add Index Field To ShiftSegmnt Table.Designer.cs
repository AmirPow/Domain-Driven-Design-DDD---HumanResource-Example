// <auto-generated />
using System;
using HR.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HR.Persistence.Migrations
{
    [DbContext(typeof(HRDbContext))]
    [Migration("20201209104657_Add Index Field To ShiftSegmnt Table")]
    partial class AddIndexFieldToShiftSegmntTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.AssignShift", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<int>("Index")
                        .HasColumnType("Int");

                    b.Property<Guid>("ShiftId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AssignShift", "EmployeeContext");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Contract", "EmployeeContext");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("PersonalCode")
                        .HasColumnType("BigInt");

                    b.HasKey("Id");

                    b.ToTable("Employee", "EmployeeContext");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.IO", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ArrivalTime")
                        .HasMaxLength(8)
                        .HasColumnType("VarChar(8)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ExiTime")
                        .HasMaxLength(8)
                        .HasColumnType("VarChar(8)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("IO", "EmployeeContext");
                });

            modelBuilder.Entity("HR.ShiftContext.Domain.Shifts.Shift", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("ShiftTitle")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("NVarChar(350)");

                    b.HasKey("Id");

                    b.ToTable("Shift", "ShiftContext");
                });

            modelBuilder.Entity("HR.ShiftContext.Domain.Shifts.ShiftSegment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VarChar(8)");

                    b.Property<int>("Index")
                        .HasColumnType("Int");

                    b.Property<Guid>("ShiftId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VarChar(8)");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.ToTable("ShiftSegment", "ShiftContext");
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.AssignShift", b =>
                {
                    b.HasOne("HR.EmployeeContext.Domain.Employees.Employee", null)
                        .WithMany("AssignShifts")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Employee_AssignShifts")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Contract", b =>
                {
                    b.HasOne("HR.EmployeeContext.Domain.Employees.Employee", null)
                        .WithMany("Contracts")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Employee_Contracts")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.IO", b =>
                {
                    b.HasOne("HR.EmployeeContext.Domain.Employees.Employee", null)
                        .WithMany("Ios")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Employee_IOs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.ShiftContext.Domain.Shifts.ShiftSegment", b =>
                {
                    b.HasOne("HR.ShiftContext.Domain.Shifts.Shift", null)
                        .WithMany("ShiftSegments")
                        .HasForeignKey("ShiftId")
                        .HasConstraintName("FK_Shift_ShiftPeriods")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HR.EmployeeContext.Domain.Employees.Employee", b =>
                {
                    b.Navigation("AssignShifts");

                    b.Navigation("Contracts");

                    b.Navigation("Ios");
                });

            modelBuilder.Entity("HR.ShiftContext.Domain.Shifts.Shift", b =>
                {
                    b.Navigation("ShiftSegments");
                });
#pragma warning restore 612, 618
        }
    }
}
